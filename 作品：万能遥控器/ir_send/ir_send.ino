#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>

//定义发射管所在针脚
const uint16_t kIrLed = D6;

//实例对象
IRsend irsend(kIrLed);

//之前采集到的rawData 数据（音量+）
uint16_t voice_down[71] = {9278, 4272,  650, 472,  656, 466,  658, 1588,  574, 1670,  656, 466,  630, 492,  604, 1640,  576, 546,  656, 1588,  576, 546,  600, 1644,  656, 466,  630, 492,  602, 1642,  654, 1592,  600, 522,  602, 1642,  706, 414,  682, 1562,  604, 518,  574, 1670,  656, 466,  630, 492,  604, 518,  576, 546,  574, 1670,  630, 490,  602, 1644,  574, 548,  654, 1590,  656, 1588,  652, 1592,  630, 41206,  9162, 2080,  708};

//之前采集到的rawData 数据（音量-）
uint16_t voice_up[71] = {9104, 4446,  626, 496,  626, 494,  600, 1644,  572, 1672,  600, 520,  574, 548,  598, 1646,  626, 496,  628, 1616,  598, 524,  572, 1672,  600, 522,  572, 548,  572, 1672,  626, 1616,  572, 548,  572, 548,  600, 522,  600, 1644,  572, 1670,  572, 1672,  574, 548,  574, 550,  572, 548,  598, 1646,  600, 1644,  574, 548,  600, 522,  600, 522,  574, 1670,  574, 1670,  600, 1644,  574, 41268,  9082, 2160,  546};

//可以用同样的格式，复制更多行，来保存其他指令
//uint16_t 变量名[数据数量] = {以逗号分隔的数据}; 


void setup() {
  Serial.begin(115200, SERIAL_8N1, SERIAL_TX_ONLY);
  
  //如果串口尚未准备好，就等50毫秒后，再次检查
  while (!Serial)
    delay(50);
  
  //做一些准备工作
  irsend.begin();
}

void loop() {
  
  /**
   * 注意，除了直接发送Raw原始数据之外，也可以发送指定格式，我尤其喜欢NEC
   * 代码为：irsend.sendNEC(0x00FFE01FUL);
   * 其他的指令可查阅文档：
   * https://crankyoldgit.github.io/IRremoteESP8266/doxygen/html/classIRsend.html
   */
   
  //发送音量+的质量，以38kHz的频率 
  irsend.sendRaw(voice_up, 71, 38);

  //等待1秒
  delay(1000);

  //发送音量-的指令
  irsend.sendRaw(voice_down, 71, 38);
  delay(1000);
}
